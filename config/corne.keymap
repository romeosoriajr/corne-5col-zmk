/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    chosen { zmk,matrix_transform = &five_column_transform; };

    behaviors {
        LHRM: LHRM {
            compatible = "zmk,behavior-hold-tap";
            label = "LHRM";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-key-positions = <5 15 25 33 34 35 27 26 6 7 8 9 16 17 18 19 29 28 30 31 32>;
            hold-trigger-on-release;
        };

        RHRM: RHRM {
            compatible = "zmk,behavior-hold-tap";
            label = "RHRM";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 30 31 32 33 34 35>;
        };
    };

    combos {
        compatible = "zmk,combos";

        togglewebnav {
            bindings = <&tog 6>;
            key-positions = <30 35>;
            require-prior-idle-ms = <500>;
            layers = <0 6>;
        };
    };

    macros {
        ShiftTab: ShiftTab {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp TAB>,
                <&macro_release>,
                <&kp LSHFT>;

            label = "SHIFTTAB";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            bindings = <
&kp Q         &kp W         &kp E          &kp R            &kp T          &kp Y    &kp U          &kp I          &kp O         &kp P
&LHRM LGUI A  &LHRM LALT S  &LHRM LCTRL D  &LHRM LSHFT F    &kp G          &kp H    &RHRM RSHFT J  &RHRM RCTRL K  &RHRM RALT L  &RHRM RGUI SQT
&kp Z         &kp X         &kp C          &kp V            &kp B          &kp N    &kp M          &kp COMMA      &kp DOT       &kp FSLH
                            &lt 3 DELETE   &lt 1 BACKSPACE  &lt 2 ENTER    &kp TAB  &kp SPACE      &lt 5 ESCAPE
            >;
        };

        Num {
            bindings = <
&none     &none     &none      &none      &none     &kp LEFT_BRACKET  &kp N7  &kp N8   &kp N9  &kp RBKT
&kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &none     &kp EQUAL         &kp N4  &kp N5   &kp N6  &kp SEMI
&none     &none     &none      &none      &none     &kp BSLH          &kp N1  &kp N2   &kp N3  &kp GRAVE
                    &trans     &trans     &trans    &kp MINUS         &kp N0  &kp DOT
            >;
        };

        Symbol {
            bindings = <
&none     &none     &none      &none      &none     &kp LEFT_BRACE  &kp AMPERSAND         &kp ASTERISK           &kp LEFT_PARENTHESIS  &kp RIGHT_BRACE
&kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &none     &kp PLUS        &kp DOLLAR            &kp PERCENT            &kp CARET             &kp COLON
&none     &none     &none      &none      &none     &kp PIPE        &kp EXCL              &kp AT_SIGN            &kp HASH              &kp TILDE
                    &trans     &trans     &trans    &kp UNDERSCORE  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
            >;
        };

        Function {
            bindings = <
&none     &none     &none      &none      &none     &kp PRINTSCREEN  &kp F7     &kp F8              &kp F9  &kp F12
&kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &none     &kp SCROLLLOCK   &kp F4     &kp F5              &kp F6  &kp F11
&none     &none     &none      &none      &none     &kp PAUSE_BREAK  &kp F1     &kp F2              &kp F3  &kp F10
                    &trans     &trans     &trans    &kp TAB          &kp SPACE  &kp K_CONTEXT_MENU
            >;
        };

        Nav {
            bindings = <
&kp PAGE_UP    &kp HOME      &kp UP_ARROW   &kp END         &kp INS          &none   &none      &none      &none     &none
&kp PAGE_DOWN  &kp LEFT      &kp DOWN       &kp RIGHT       &kp CAPSLOCK     &none   &kp RSHFT  &kp RCTRL  &kp RALT  &kp RGUI
&kp C_AC_UNDO  &kp C_AC_CUT  &kp C_AC_COPY  &kp C_AC_PASTE  &kp C_AC_REDO    &none   &none      &none      &none     &none
                             &kp DEL        &kp BACKSPACE   &kp RETURN       &trans  &trans     &trans
            >;
        };

        Media {
            bindings = <
&none         &none         &kp C_VOLUME_UP  &none             &none         &none   &none      &none      &none     &none
&none         &kp C_PREV    &kp C_VOL_DN     &kp C_NEXT        &none         &none   &kp RSHFT  &kp RCTRL  &kp RALT  &kp RGUI
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2     &bt BT_SEL 3      &bt BT_CLR    &none   &none      &none      &none     &none
                            &kp K_MUTE       &kp C_PLAY_PAUSE  &kp C_STOP    &trans  &trans     &trans
            >;
        };

        WebAccessibility {
            bindings = <
&none     &none     &none      &none      &none     &ShiftTab       &none      &none         &kp TAB    &none
&kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &none     &kp LEFT_ARROW  &kp DOWN   &kp UP_ARROW  &kp RIGHT  &none
&none     &none     &none      &none      &none     &none           &none      &none         &none      &none
                    &trans     &trans     &trans    &kp ENTER       &kp SPACE  &kp ESC
            >;
        };
    };
};
